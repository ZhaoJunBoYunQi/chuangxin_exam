<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmall.dao.Teacher_file_tbDao" >
  <resultMap id="BaseResultMap" type="com.mmall.pojo.Teacher_file_tb" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="savename" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="filename" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="filetype" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="filesize" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="fileinfo" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="uptime" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, savename, filename, filetype, filesize, fileinfo, uptime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher_file_tb
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher_file_tb
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mmall.pojo.Teacher_file_tb" >
    insert into teacher_file_tb (id, savename, filename, 
      filetype, filesize, fileinfo, 
      uptime)
    values (#{id,jdbcType=INTEGER}, #{savename,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR}, 
      #{filetype,jdbcType=VARCHAR}, #{filesize,jdbcType=INTEGER}, #{fileinfo,jdbcType=VARCHAR}, 
      #{uptime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mmall.pojo.Teacher_file_tb" >
    insert into teacher_file_tb
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="savename != null" >
        savename,
      </if>
      <if test="filename != null" >
        filename,
      </if>
      <if test="filetype != null" >
        filetype,
      </if>
      <if test="filesize != null" >
        filesize,
      </if>
      <if test="fileinfo != null" >
        fileinfo,
      </if>
      <if test="uptime != null" >
        uptime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="savename != null" >
        #{savename,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filetype != null" >
        #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null" >
        #{filesize,jdbcType=INTEGER},
      </if>
      <if test="fileinfo != null" >
        #{fileinfo,jdbcType=VARCHAR},
      </if>
      <if test="uptime != null" >
        #{uptime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.pojo.Teacher_file_tb" >
    update teacher_file_tb
    <set >
      <if test="savename != null" >
        savename = #{savename,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        filename = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filetype != null" >
        filetype = #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null" >
        filesize = #{filesize,jdbcType=INTEGER},
      </if>
      <if test="fileinfo != null" >
        fileinfo = #{fileinfo,jdbcType=VARCHAR},
      </if>
      <if test="uptime != null" >
        uptime = #{uptime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmall.pojo.Teacher_file_tb" >
    update teacher_file_tb
    set savename = #{savename,jdbcType=VARCHAR},
      filename = #{filename,jdbcType=VARCHAR},
      filetype = #{filetype,jdbcType=VARCHAR},
      filesize = #{filesize,jdbcType=INTEGER},
      fileinfo = #{fileinfo,jdbcType=VARCHAR},
      uptime = #{uptime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>